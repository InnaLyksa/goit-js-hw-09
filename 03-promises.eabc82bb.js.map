{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAKA,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,S,GAEpBA,E,IAyBP,SAASQ,EAAUC,G,IAAEV,EAAFU,EAAEV,SAAUC,EAAZS,EAAYT,MAC7BJ,EAAAc,OAAOC,QAAQ,uBAAwCC,OAAfb,EAAS,QAAYa,OAANZ,EAAM,MAAK,CAC9DD,SAAQ,YACVc,SAAU,OACVC,MAAO,S,CAIX,SAASC,EAAQN,G,IAAEV,EAAFU,EAAEV,SAAUC,EAAZS,EAAYT,MAC3BJ,EAAAc,OAAOM,QAAQ,sBAAqCJ,OAAfb,EAAS,QAAYa,OAANZ,EAAM,MAAK,CAC7DD,SAAU,YACVc,SAAU,OACVC,MAAO,S,CAlDIG,SAASC,cAAc,SAC/BC,iBAAiB,UAgBxB,SAAsBC,GACpBA,EAAIC,iBAEJ,IAAIC,EAAaC,OAAOH,EAAII,OAAOC,SAASzB,MAAM0B,OAC9CC,EAAYJ,OAAOH,EAAII,OAAOC,SAASG,KAAKF,OAC5CG,EAAcN,OAAOH,EAAII,OAAOC,SAASK,OAAOJ,OAEpD,GAAIJ,EAAa,GAAKK,EAAY,GAAKE,EAAc,EAMnD,YALAjC,EAAAc,OAAOM,QAAS,uCAAyC,CACrDjB,SAAQ,YACVc,SAAU,OACVC,MAAO,UAIX,IAAK,IAAIiB,EAAI,EAAGA,GAAKF,EAAaE,GAAK,EACrCjC,EAAciC,EAAGT,GAAYU,KAAKxB,GAAWyB,MAAMlB,GACnDO,GAAcK,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formEl = document.querySelector('.form');\nformEl.addEventListener('submit', onFormSubmit);\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction onFormSubmit(evt) {\n  evt.preventDefault();\n\n  let delayValue = Number(evt.target.elements.delay.value);\n  let stepValue = Number(evt.target.elements.step.value);\n  let amountValue = Number(evt.target.elements.amount.value);\n\n  if (delayValue < 1 || stepValue < 1 || amountValue < 1) {\n    Notify.failure(`❌ All values must be more than zero!`, {\n      position: 'right-top',\n      fontSize: '20px',\n      width: '350px',\n    });\n    return;\n  }\n  for (let i = 1; i <= amountValue; i += 1) {\n    createPromise(i, delayValue).then(onSuccess).catch(onError);\n    delayValue += stepValue;\n  }\n}\n\nfunction onSuccess({ position, delay }) {\n  Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`, {\n    position: 'right-top',\n    fontSize: '20px',\n    width: '350px',\n  });\n}\n\nfunction onError({ position, delay }) {\n  Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`, {\n    position: 'right-top',\n    fontSize: '20px',\n    width: '350px',\n  });\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","$ce04d3a99e08e73b$var$onSuccess","param","Notify","success","concat","fontSize","width","$ce04d3a99e08e73b$var$onError","failure","document","querySelector","addEventListener","evt","preventDefault","delayValue","Number","target","elements","value","stepValue","step","amountValue","amount","i","then","catch"],"version":3,"file":"03-promises.eabc82bb.js.map"}